name: CI
on:
  #push:
  #  branches:
  #  - main
  schedule:
  - cron: 0 3 * * *
jobs:
  alertmanager:
    runs-on: ubuntu-20.04
    needs:
    - debian
    - go
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image alertmanager
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  apt-collector:
    runs-on: ubuntu-20.04
    needs:
    - debian
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image apt-collector
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  aria2:
    runs-on: ubuntu-20.04
    needs:
    - cxx
    - debian
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image aria2
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  bitcoind:
    runs-on: ubuntu-20.04
    needs:
    - cxx
    - debian
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image bitcoind
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  blackarch:
    runs-on: ubuntu-20.04
    needs: []
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image blackarch
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  blackbox-exporter:
    runs-on: ubuntu-20.04
    needs:
    - debian
    - go
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image blackbox-exporter
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  cadvisor:
    runs-on: ubuntu-20.04
    needs:
    - debian
    - go
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image cadvisor
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  chrony:
    runs-on: ubuntu-20.04
    needs:
    - cxx
    - debian
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image chrony
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  cxx:
    runs-on: ubuntu-20.04
    needs: []
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image cxx
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  debian:
    runs-on: ubuntu-20.04
    needs: []
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image debian
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  fritzbox-exporter:
    runs-on: ubuntu-20.04
    needs:
    - debian
    - go
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image fritzbox-exporter
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  go:
    runs-on: ubuntu-20.04
    needs: []
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image go
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  grafana:
    runs-on: ubuntu-20.04
    needs:
    - debian
    - go
    - node
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image grafana
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  haveged:
    runs-on: ubuntu-20.04
    needs:
    - cxx
    - debian
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image haveged
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  hostapd:
    runs-on: ubuntu-20.04
    needs:
    - cxx
    - debian
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image hostapd
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  jellyfin:
    runs-on: ubuntu-20.04
    needs:
    - ubuntu
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image jellyfin
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  lego:
    runs-on: ubuntu-20.04
    needs:
    - debian
    - go
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image lego
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  nftables-exporter:
    runs-on: ubuntu-20.04
    needs:
    - python
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image nftables-exporter
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  nginx:
    runs-on: ubuntu-20.04
    needs:
    - cxx
    - debian
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image nginx
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  node:
    runs-on: ubuntu-20.04
    needs: []
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image node
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  node-exporter:
    runs-on: ubuntu-20.04
    needs:
    - debian
    - go
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image node-exporter
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  prometheus:
    runs-on: ubuntu-20.04
    needs:
    - debian
    - go
    - node
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image prometheus
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  python:
    runs-on: ubuntu-20.04
    needs: []
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image python
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  rust:
    runs-on: ubuntu-20.04
    needs: []
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image rust
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  sanoid:
    runs-on: ubuntu-20.04
    needs:
    - ubuntu
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image sanoid
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  signal-cli:
    runs-on: ubuntu-20.04
    needs: []
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image signal-cli
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  signal-receiver:
    runs-on: ubuntu-20.04
    needs:
    - go
    - signal-cli
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image signal-receiver
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  smart-collector:
    runs-on: ubuntu-20.04
    needs:
    - python
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image smart-collector
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  stdiscosrv:
    runs-on: ubuntu-20.04
    needs:
    - debian
    - go
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image stdiscosrv
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  strelaysrv:
    runs-on: ubuntu-20.04
    needs:
    - debian
    - go
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image strelaysrv
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  syncoid:
    runs-on: ubuntu-20.04
    needs:
    - ubuntu
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image syncoid
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  syncthing:
    runs-on: ubuntu-20.04
    needs:
    - debian
    - go
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image syncthing
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  ubuntu:
    runs-on: ubuntu-20.04
    needs: []
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image ubuntu
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  unbound:
    runs-on: ubuntu-20.04
    needs:
    - cxx
    - debian
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image unbound
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  webui-aria2:
    runs-on: ubuntu-20.04
    needs:
    - debian
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image webui-aria2
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
  wpa-supplicant:
    runs-on: ubuntu-20.04
    needs:
    - cxx
    - debian
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image wpa-supplicant
      env:
        REGISTRY_NAME: ghcr.io
        REGISTRY_USER: dadevel
        REGISTRY_PASS: ${{ secrets.GITHUB_TOKEN }}
