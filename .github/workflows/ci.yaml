name: CI
on:
  schedule:
  - cron: 0 3 * * *
jobs:
  alertmanager:
    runs-on: ubuntu-20.04
    needs:
    - debian
    - go-dev
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image alertmanager/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  apt-collector:
    runs-on: ubuntu-20.04
    needs:
    - debian
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image apt-collector/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  aria2:
    runs-on: ubuntu-20.04
    needs:
    - cxx-dev
    - debian
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image aria2/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  aria2-blackhole:
    runs-on: ubuntu-20.04
    needs:
    - python
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image aria2-blackhole/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  authelia:
    runs-on: ubuntu-20.04
    needs:
    - debian
    - go-dev
    - node-dev
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image authelia/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  bazarr:
    runs-on: ubuntu-20.04
    needs:
    - cxx-dev
    - debian
    - node-dev
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image bazarr/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  blackarch:
    runs-on: ubuntu-20.04
    needs: []
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image blackarch/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  blackbox-exporter:
    runs-on: ubuntu-20.04
    needs:
    - debian
    - go-dev
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image blackbox-exporter/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  cadvisor:
    runs-on: ubuntu-20.04
    needs:
    - debian
    - go-dev
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image cadvisor/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  chrony:
    runs-on: ubuntu-20.04
    needs:
    - cxx-dev
    - debian
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image chrony/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  cxx-dev:
    runs-on: ubuntu-20.04
    needs: []
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image cxx/dev.Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  debian:
    runs-on: ubuntu-20.04
    needs: []
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image debian/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  fritzbox-exporter:
    runs-on: ubuntu-20.04
    needs:
    - debian
    - go-dev
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image fritzbox-exporter/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  go-dev:
    runs-on: ubuntu-20.04
    needs: []
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image go/dev.Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  grafana:
    runs-on: ubuntu-20.04
    needs:
    - debian
    - go-dev
    - node-dev
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image grafana/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  haveged:
    runs-on: ubuntu-20.04
    needs:
    - cxx-dev
    - debian
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image haveged/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  hostapd:
    runs-on: ubuntu-20.04
    needs:
    - cxx-dev
    - debian
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image hostapd/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  jackett:
    runs-on: ubuntu-20.04
    needs:
    - debian
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image jackett/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  jellyfin:
    runs-on: ubuntu-20.04
    needs:
    - ubuntu
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image jellyfin/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  kali-net:
    runs-on: ubuntu-20.04
    needs:
    - kali-std
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image kali/net.Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  kali-rev:
    runs-on: ubuntu-20.04
    needs:
    - kali-std
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image kali/rev.Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  kali-std:
    runs-on: ubuntu-20.04
    needs: []
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image kali/std.Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  kali-web:
    runs-on: ubuntu-20.04
    needs:
    - kali-std
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image kali/web.Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  kali-wifi:
    runs-on: ubuntu-20.04
    needs:
    - kali-std
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image kali/wifi.Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  kali-win:
    runs-on: ubuntu-20.04
    needs:
    - kali-std
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image kali/win.Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  lego:
    runs-on: ubuntu-20.04
    needs:
    - debian
    - go-dev
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image lego/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  mono:
    runs-on: ubuntu-20.04
    needs: []
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image mono/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  mono-dev:
    runs-on: ubuntu-20.04
    needs: []
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image mono/dev.Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  nginx:
    runs-on: ubuntu-20.04
    needs:
    - cxx-dev
    - debian
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image nginx/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  node-dev:
    runs-on: ubuntu-20.04
    needs: []
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image node/dev.Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  node-exporter:
    runs-on: ubuntu-20.04
    needs:
    - debian
    - go-dev
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image node-exporter/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  openconnect:
    runs-on: ubuntu-20.04
    needs:
    - cxx-dev
    - debian
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image openconnect/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  podman-collector:
    runs-on: ubuntu-20.04
    needs:
    - debian
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image podman-collector/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  prometheus:
    runs-on: ubuntu-20.04
    needs:
    - debian
    - go-dev
    - node-dev
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image prometheus/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  python:
    runs-on: ubuntu-20.04
    needs: []
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image python/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  python-dev:
    runs-on: ubuntu-20.04
    needs: []
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image python/dev.Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  radarr:
    runs-on: ubuntu-20.04
    needs:
    - debian
    - node-dev
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image radarr/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  redis:
    runs-on: ubuntu-20.04
    needs:
    - cxx-dev
    - debian
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image redis/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  rust-dev:
    runs-on: ubuntu-20.04
    needs: []
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image rust/dev.Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  signal-receiver:
    runs-on: ubuntu-20.04
    needs:
    - cxx-dev
    - debian
    - go-dev
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image signal-receiver/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  smart-collector:
    runs-on: ubuntu-20.04
    needs:
    - python
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image smart-collector/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  sonarr:
    runs-on: ubuntu-20.04
    needs:
    - mono
    - mono-dev
    - node-dev
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image sonarr/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  stdiscosrv:
    runs-on: ubuntu-20.04
    needs:
    - debian
    - go-dev
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image stdiscosrv/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  strelaysrv:
    runs-on: ubuntu-20.04
    needs:
    - debian
    - go-dev
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image strelaysrv/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  syncthing:
    runs-on: ubuntu-20.04
    needs:
    - debian
    - go-dev
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image syncthing/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  ubuntu:
    runs-on: ubuntu-20.04
    needs: []
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image ubuntu/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  unbound:
    runs-on: ubuntu-20.04
    needs:
    - cxx-dev
    - debian
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image unbound/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  webui-aria2:
    runs-on: ubuntu-20.04
    needs:
    - debian
    - go-dev
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image webui-aria2/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  wpa-supplicant:
    runs-on: ubuntu-20.04
    needs:
    - cxx-dev
    - debian
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image wpa-supplicant/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  zrepl:
    runs-on: ubuntu-20.04
    needs:
    - go-dev
    - ubuntu
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build, Test & Push
      run: ./build.py image zrepl/Dockerfile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
